name: Production deployment

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-18.04

    steps:

    # Checkout code including submodule
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.REPOSITORY_READ_TOKEN }}
        submodules: true

    # Install node
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    # Build
    - name: Build
      run: |
        cd app/
        npm install --prefer-offline --no-audit
        npm run build

    # Inject SH Config file
    - name: replace instance ID
      uses: datamonsters/replace-action@v2
      with:
        files: 'app/dist/shConfig.js'
        replacements: '$SH_INSTANCE_ID=${{ secrets.SH_INSTANCE_ID }},$SH_INSTANCE_ID_TRILATERAL=${{ secrets.SH_INSTANCE_ID_TRILATERAL }},$MAPBOX_ACCESS_TOKEN=${{ secrets.MAPBOX_ACCESS_TOKEN }},$GEODB_INSTANCE_ID=${{ secrets.GEODB_INSTANCE_ID }},$LISTMONK_API_KEY=${{ secrets.LISTMONK_API_KEY }},$STAT_API_CLIENT_SECRET=${{ secrets.STAT_API_CLIENT_SECRET }},$STAT_API_CLIENT_ID=${{ secrets.STAT_API_CLIENT_ID }}'

    # Upload to S3
    - name: sync s3
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --delete --follow-symlinks
      env:
        SOURCE_DIR: 'app/dist'
        DEST_DIR: 'production'
        AWS_REGION: 'eu-central-1'
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Invalidate Cloudfront distributions
    - name: invalidate_esa
      uses: chetan/invalidate-cloudfront-action@v1.2
      env:
        DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PRODUCTION_ESA }}
        PATHS: '/*'
        AWS_REGION: 'eu-central-1'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: invalidate_trilateral
      uses: chetan/invalidate-cloudfront-action@v1.2
      env:
        DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PRODUCTION_TRILATERAL }}
        PATHS: '/*'
        AWS_REGION: 'eu-central-1'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Send notification
    - name: action-slack
      uses: 8398a7/action-slack@v3.0.3
      with:
        status: ${{ job.status }}
        author_name: eodash_deploy
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always()
